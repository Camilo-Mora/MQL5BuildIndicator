[["index.html", "How to create a MQL5 indicator About", " How to create a MQL5 indicator Camilo Mora, Ph.D. About Lets create a simple indicator that will plot the two lines of the Bollinger bands. And create a third variable to display 1 if the price is above the upper band, and 2 if it is below the lower band. File "],["open-the-mql5-editor.html", "Open the MQL5 editor", " Open the MQL5 editor Open the Meta editor "],["create-templete.html", "Create templete", " Create templete Click on New (Red arrow) Click on Custom Indicator (Blue arrow) Name the indicator and click accept on all other settings. As a result, the editor will return the based template of an indicator. You can delete all lines of code in grey, and those up the top they are not necessary and make the editor to crowded "],["basic-templete.html", "Basic templete", " Basic templete At the end you should have the basic sections of the indicator: \\[\\\\[.0005in]\\] "],["indicator-sections.html", "Indicator sections:", " Indicator sections: Most commonly an indicator includes the following sections: Global variables OnInit {} OnCalculate{} Each section should contain specific lines of code, which will check next. "],["global-variables.html", "Global variables", " Global variables These are the variables that you put up the very top of the script. By them being global it means they will be available in all sections of the indicator. This section can include: "],["other-indicators-needed.html", "Other indicators needed", " Other indicators needed "],["plot-properties.html", "Plot properties", " Plot properties Where to place the indicator In which chart will the indicator be plotted How many plots will be addded to chart In the case of the BB we need two Arrays (orBuffers) to store the data for the upper and lower bands. Here you can also indicate that the indicator will use 2 lines. We also will need a buffer to store the data on whether to go long or short. indicator_buffers should indicate the number of arrays to use. Think of it like number of data containers that the indicator needs. indicator_plots should indicate the number of plots to draw in the chart. Plot attributures In this section you need to define things like whether the indicator will deploy a line, its color, and the name of the line. In the case of the BB, we need two lines. Each line also need to have a unique name, because later if we want to delete them, we need to call them by their name to remove them. All other attributes of the indictor are self explanatory. Each attribute of the indicator needs to be reference by the number at the end like indicator_color2 will indicate the color of the second line. indicator_color1 the color of the first line. "],["inputs.html", "Inputs", " Inputs The variables that the user can modify in the user interface. The name of the field that appears in the form (ser interface) is shown after the //. In our case, the user can modify two variables: the length of the BB, and the number of standard deviations to use. "],["handle-and-buffers.html", "Handle and buffers", " Handle and buffers In the Global section of the indicator you also need to define the handle. Which will be the numeric name used by the indicator. In this section you also will need to create the buffers where the data will be stored. "],["containers-for-other-variables.html", "Containers for other variables", " Containers for other variables In this section we should also define any other variable we want to use everywhere. In our case we need a holder to define long or short, a buffer to store that data, and a holder for the Close price. "],["oninit.html", "OnInit{}", " OnInit{} This is the section to define codes that will be run only once, upon starting the indicator. "],["handle.html", "Handle", " Handle in this section you need to define the function of the indicator to a handle. Basically we tell MQL5 what equation we will use. In this part, you can insert the inputs defined by the user earlier. "],["map-buffers.html", "Map buffers", " Map buffers Define the numeric values that will be given to the different buffers. This is call Mapping buffers, basically once all is done, MQL5 will return the values of the buffers in the order mentioned here. In the case of BB, the upper buffer will be given 0 and the lower buffer 1. If at any later case you need to use the values of the upper band, you need to call the indicator and its buffer 0, if you want the values of the lower band, you will call the indicator and its buffer 1. "],["oncalculate.html", "OnCalculate{}", " OnCalculate{} This is where the hardcore calculations are done. In this section you can include things like: "],["bypass.html", "Bypass", " Bypass Baypass bars for which there is not enough data. Say you ask to calculate the BB over the last 20 bars but there are only 10 bars, in which case the calculation will by skipped until there are at least 20 bars. "],["optimize-calculations.html", "Optimize calculations", " Optimize calculations Tell MT5 to run calculations from the start if this is the first time runing the code. however, if the code is already running calculate only for the last bar. This section can be coded in many different ways, and it is important that you check the outputs of the indicator. Specifically if the Buffer is being used from right to left or from left to right. By default the array is read from left to right: the latest value is in the latest cell or that cell to the right. "],["copy-buffers.html", "Copy buffers", " Copy buffers Move data from the indicator handle to the respective buffer. In the case of the BB indicators, it delivers 3 buffers (0: mean lines, 1: upper and 2:lower). but we in this case we only want the upper and lower buffer, so we copy buffer 1 from the indicator into our upper buffer, and bufer 2 of the indicator into our lower buffer. "],["additional-calculations.html", "Additional calculations", " Additional calculations One can also do additional calculations over the desire range of candles. "],["done.html", "Done", " Done You can click on compile Then go to MT5 and load the indicator. It should look like this "]]
